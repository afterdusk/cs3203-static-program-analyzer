1  Relationship and with clauses return BOOLEAN
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select BOOLEAN such that Calls*(q,p) with p.procName = "ellipse"
FALSE
5000
2  Relationship and with clauses return tuple
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select<c.value, n>  with n1 = c.value such that Next*(n1, n)
1 10,1 11,1 12,1 13,1 14,1 15,1 2,1 3,1 4,1 5,1 6,1 7,1 8,1 9,2 10,2 11,2 12,2 13,2 14,2 15,2 3,2 4,2 5,2 6,2 7,2 8,2 9,3 10,3 11,3 12,3 13,3 14,3 15,3 4,3 5,3 6,3 7,3 8,3 9,5 6,5 7,5 8
5000
3  Relationship and with clauses return synonym
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select v such that Follows*(9, s) and Uses(s, v) with s.stmt# =n and n1 = c.value such that Modifies("ellipse", v) with n1 = n
none
5000
4  Relationship and with clauses return attribute
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select cl.stmt# such that Calls(p,_) with cl.procName = p.procName
13,15,17,20,34,38,39,40,41,7,8
5000
5  Relationship and pattern clauses return BOOLEAN
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select BOOLEAN such that Parent(ifs, a) pattern w(v,_) and a(v,_)
FALSE
5000
6  Relationship and pattern clauses return tuple
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select <p, v, ifs> such that Modifies(p, v) pattern ifs("x",_,_) such that Uses(p, "x")
a a 18,a a 22,a a 27,a k 18,a k 22,a k 27,a p 18,a p 22,a p 27,a t 18,a t 22,a t 27,a x 18,a x 22,a x 27,a y 18,a y 22,a y 27,a z 18,a z 22,a z 27,b a 18,b a 22,b a 27,b k 18,b k 22,b k 27,b p 18,b p 22,b p 27,b x 18,b x 22,b x 27,b y 18,b y 22,b y 27,b z 18,b z 22,b z 27,f a 18,f a 22,f a 27,f k 18,f k 22,f k 27,f p 18,f p 22,f p 27,f t 18,f t 22,f t 27,f x 18,f x 22,f x 27,f y 18,f y 22,f y 27,f z 18,f z 22,f z 27
5000
7  Relationship and pattern clauses return synonym
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select v pattern ifs(v,_,_) and while(v,_) such that Uses("ellipse", "length")
none
5000
8  Relationship and pattern clauses return attribute
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select ifs.stmt# pattern ifs(v,_,_) and w(v,_) such that Uses("ellipse", v)
none
5000
9  With and pattern clauses return BOOLEAN
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select BOOLEAN pattern w("x",_) with w.stmt# = 8
FALSE
5000
10  With and pattern clauses return tuple
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select <cl, ifs.stmt#> with cl.procName = p.procName pattern ifs(v,_,_)
13 10,13 18,13 22,13 27,13 4,15 10,15 18,15 22,15 27,15 4,17 10,17 18,17 22,17 27,17 4,20 10,20 18,20 22,20 27,20 4,25 10,25 18,25 22,25 27,25 4,32 10,32 18,32 22,32 27,32 4,33 10,33 18,33 22,33 27,33 4,34 10,34 18,34 22,34 27,34 4,35 10,35 18,35 22,35 27,35 4,37 10,37 18,37 22,37 27,37 4,38 10,38 18,38 22,38 27,38 4,39 10,39 18,39 22,39 27,39 4,40 10,40 18,40 22,40 27,40 4,41 10,41 18,41 22,41 27,41 4,7 10,7 18,7 22,7 27,7 4,8 10,8 18,8 22,8 27,8 4
5000
11  With and pattern clauses return synonym
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select w with v.varName = "sin" pattern w(v,_)
none
5000
12  With and pattern clauses return attribute
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select v.varName with v1.varName = "sin" pattern ifs(v1,_,_) and ifs(v,_,_)
none
5000
13  All types of clauses return BOOLEAN
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select BOOLEAN such that Uses(q, "y") and Uses(q, v) pattern w(v,_) with v.varName = "x" and q.procName = "foo"
FALSE
5000
14   All types of clauses return tuple
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select <cl, ifs.stmt#> with cl.procName = p.procName pattern ifs(v,_,_) such that Modifies(p, v)
13 18,13 22,13 27,13 4,38 10,38 18,38 22,38 27,38 4,39 18,39 22,39 27,39 4,40 18,40 22,40 27,40 4,7 18,7 22,7 27,7 4
5000
15   All types of clauses return synonym
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select  p such that Modifies(q, "y") and Uses(q, v) pattern w(v,_) with q.procName = p.procName
a,b,f
5000
16   All types of clauses return attribute
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select v.varName such that Modifies(q, "y") and Uses(q, v) pattern ifs(v,_,_) with q.procName = cl.procName
x,t,z
5000
17 Syntatic error when return BOOLEAN
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select BOOLEAN with ifs(_,_)
none
5000
18 Mix Case 1
stmt s; assign a, a1; call cl; variable v, v1; procedure p; if ifs;
Select p such that Modifies(10, v) pattern a(_, _"x + 1"_)
a,b,c,d,e,f
5000
19 Mix Case 2
stmt s; assign a, a1; call cl; variable v, v1; procedure p; if ifs;
Select p such that Modifies(10, v) pattern a(_, _"a + b"_)
none
5000
20 Mix Case 3
stmt s; assign a, a1; call cl; variable v, v1; procedure p; if ifs;
Select v such that Parent(s, 10) pattern a("length", _"x"_)
none
5000
21 Mix Case 4
stmt s; assign a, a1; call cl; variable v, v1; procedure p; if ifs;
Select p such that Parent*(s, 15) pattern a(v1, _"a+ b"_)
none
5000
22 Mix Case 5
stmt s; assign a, a1; call cl; variable v, v1; procedure p; if ifs;
Select ifs such that Follows(s, cl) pattern a1(v,  _)
10,18,22,27,4
5000
23 Mix Case 6
stmt s; assign a, a1; call cl; variable v, v1; procedure p; if ifs;
Select cl such that Follows*(s, a) pattern a1(v1, _)
13,15,17,20,25,32,33,34,35,37,38,39,40,41,7,8
5000
24 Mix Case 7
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select a such that Uses(a, "pi") pattern a(v, _"pi * x"_)
none
5000
25 Mix Case 8
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select v such that Uses(s, v) pattern a(v, _)
x,a,k,p,t
5000
26 Mix Case 9
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select w such that Parent*(w, a) pattern a(v, _)
19,28
5000
27 Mix Case 10
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select v such that Uses(a, v) pattern a(v, _)
x, a,k,p,t
5000
28 Mix Case 11
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select p such that Uses(p, "x") pattern a(_, _"x*x"_)
none
5000
29 Mix Case 12
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select a pattern a(v, _) Modifies(s, "a")
none
5000
30 Mix Case 13
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select w such that Parent(w, s) pattern a(v1, _)
11,19,28
5000
31 Mix Case 14
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select v such that Follows*(w, cl) pattern a(v,  _)
none
5000
32 Mix Case 15
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select cl such that Follows*(cl, a) pattern a1(v1, _)
17,20
5000
33 Mix Case 16
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select v such that Modifies(10, v) pattern a(_, _"x / length"_) 
none
5000
34 Mix Case 17
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select a such that Uses(s, v) pattern a1(v, _)
1,23,26,29,5,6, 9, 16,  21,24
5000
35 Mix Case 18
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select cl such that Parent*(10, a) pattern a(v, _"x+y"_)
none
5000
36 Mix Case 19
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select w such that Uses(a, v) pattern a(v, _)
11,19,28
5000
37 Mix Case 20
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select w such that Affects(a, s1) and Next*(ifs, a) and Affects(s1, a1)
none
5000
38 Mix Case 21
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select s1 such that Affects*(a, s1) and Next*(ifs, a) and Affects(s1, a1)
29
5000
39 Mix Case 22
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select <a, s1, ifs> such that Affects*(a, s1) and Parent*(ifs, a) and Affects(s1, a1)
21 29 18,29 29 27
5000
40 Mix Case 23
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select <a,a1> such that Affects(a, s1) and Affects*(s1, a1) such that Use(a, v) pattern a1("y",_)
none
5000
41 Mix Case 24
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v such that Affects*(a, s1) and Uses(p,v) and Modifies(s1, v) with p.procName ="foo" and c.value = 10
none
5000
42 Mix Case 25
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v.varname such that Affects(a, s1) pattern a(v,_) such that Modifies(s1, v) with p.procName ="foo" and c.value = 10
none
5000
43 Mix Case 26
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v such that Affects(a, s1) pattern a(v,_) such that Next*(s1, a1) with p.procName =cl.procName and c.value = 10
none
5000
44 Mix Case 27
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v such that Calls(p, q) pattern a(v,_) such that Next*(s1, a1) with p.procName =cl.procName and c.value = 10
none
5000
45 Mix Case 28
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select  pattern ifs(v,_,_) and a(v1,_) such that Follows*(ifs,a) and Parent(ifs,a1) and Affects*(a,a1) with varName = "y"
none
5000
46 Mix Case 29
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select w such that AffectsBip(a, s1) and NextBip*(ifs, a) and Affects(s1, a1)
none
5000
47 Mix Case 30
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select s1 such that AffectsBip*(a, s1) and Next*(ifs, a) and Affects(s1, a1)
29
5000
48 Mix Case 31
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select <a, s1, ifs> such that Affects*(a, s1) and Parent*(ifs, a) and AffectsBip(s1, a1)
21 29 18,29 29 27
5000
49 Mix Case 32
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select <a,a1> such that Affects(a, s1) and AffectsBip*(s1, a1) such that Use(a, v) pattern a1("y",_)
none
5000
50 Mix Case 33
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v such that AffectsBip*(a, s1) and Uses(p,v) and Modifies(s1, v) with p.procName ="foo" and c.value = 10
none
5000
51 Mix Case 34
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v.varname such that AffectsBip(a, s1) pattern a(v,_) such that Modifies(s1, v) with p.procName ="foo" and c.value = 10
none
5000
52 Mix Case 35
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v such that AffectsBip(a, s1) pattern a(v,_) such that NextBip*(s1, a1) with p.procName =cl.procName and c.value = 10
none
5000
53 Mix Case 36
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v such that Calls(p, q) pattern a(v,_) such that NextBip*(s1, a1) with p.procName =cl.procName and c.value = 10
none
5000
54 Mix Case 37
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select  pattern ifs(v,_,_) and a(v1,_) such that Follows*(ifs,a) and Parent(ifs,a1) and AffectsBip*(a,a1) with varName = "y"
none
5000
55 Edge Case 1
stmt s; assign a; variable v; procedure p; constant c;
Select s
27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26
5000
56 Edge Case 2
stmt s; assign a; variable v; procedure p; constant c;
Select v
x, y, a,k,p,w,z, t
5000
57 Edge Case 3
stmt s; assign a; variable v; procedure p; constant c;
Select p
a,b,c,d,e,f
5000
58 Edge Case 4
stmt s; assign a; variable v; procedure p; constant c;
Select c
0, 5, 1, 2, 3
5000
59 Edge Case 5
stmt s; assign a; variable v; procedure p; constant c;
Select s such that Parent(s, s)
none
5000
60 Edge Case 6
stmt s; assign a; variable v; procedure p; constant c;
Select s such that Parent*(s, s)
none
5000
61 Edge Case 7
stmt s; assign a; variable v; procedure p; constant c;
Select s such that Follows(s, s)
none
5000
62 Edge Case 8
stmt s; assign a; variable v; procedure p; constant c;
Select s such that Follows*(s, s)
none
5000
63 Edge Case 9
stmt s;
Select a
none
5000
64 Edge Case 10
stmt s;
Select s such that Follows(s, a)
none
5000
65 Edge Case 11
stmt s; assign a; variable v; procedure p;
Select s Follows(s, a)
none
5000
66 Edge Case 12
stmt s; assign a; variable v; procedure p;
Select s such that Parent(v, s)
none
5000
67 Edge Case 13
stmt s; assign a; variable v; procedure p;
Select s such that Parent(p, s)
none
5000
68 Edge Case 14
stmt s; assign a; variable v; procedure p;
Select s such that Modifies(_, v)
none
5000
69 Edge Case 15
stmt s; assign a; variable v; procedure p;
Select s such that Uses(_, v)
none
5000
70 Edge Case 16
stmt s;
Select s such that Follows (s, 17)
16
5000
71 Edge Case 17
assign a;
select a such that Uses(a, "T")
none
5000
72  comment 
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select w.stmt#
11,19,28
5000
73 comment 
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select ifs 
10,18,22,27,4
5000
74 comment 
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select cl.stmt#
13,15,17,20,25,32,33,34,35,37,38,39,40,41,7,8
5000
75 comment 
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select pn
31,36
5000
76 comment 
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select re
12,14,3,30, 2
5000
77 comment 
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select n
27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26
5000
78 comment 
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select BOOLEAN
TRUE
5000
