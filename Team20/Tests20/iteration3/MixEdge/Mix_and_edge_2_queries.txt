1 - Mix Case 1
stmt s; assign a, a1; call cl; variable v, v1; procedure p; if ifs;
Select p such that Modifies(10, v) pattern a(_, _"i"_) 
One, Two
5000
2 - Mix Case 2
stmt s; assign a, a1; call cl; variable v, v1; procedure p; if ifs;
Select p such that Parent*(s, 15) pattern a(v1, _"a+ b"_)
none
5000
3 - Mix Case 3
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select a such that Uses(a, "i") pattern a(v, _"i"_)
4, 24, 28, 29, 31, 32
5000
4 - Mix Case 4
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select v such that Uses(s, v) pattern a(v, _)
i, difference, k
5000
5 - Mix Case 5
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select w such that Parent*(w, a) pattern a(v, _)
5, 16
5000
6 - Mix Case 6
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select v such that Uses(a, v) pattern a(v, _)
i, k
5000
7 - Mix Case 7
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select v such that Follows*(w, cl) pattern a(v,  _)
none
5000
8 - Mix Case 8
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select v such that Modifies(10, v) pattern a(_, _"i - 1"_) 
x1 
5000
9 - Mix Case 9
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select ifs such that Uses(s, v) pattern a1(v, _)
2, 13, 26, 27, 30
5000
10 - Mix Case 10
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select cl such that Parent*(10, a) pattern a(v, _"x+y"_)
none
5000
11 - Mix Case 11
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select w such that Uses(a, v) pattern a(v, _)
5, 16
5000
12 - Edge Case 1
stmt s; 
Select a
none
5000
13 -  Relationship and with clauses return BOOLEAN
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select BOOLEAN such that Calls*(q,p) with p.procName = "ellipse"
FALSE
5000
14 -  Relationship and with clauses return tuple
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select<c.value, n>  with n1 = c.value such that Next*(n1, n)
1 10,1 11,1 12,1 13,1 14,1 15,1 16,1 17,1 18,1 19,1 2,1 20,1 21,1 22,1 23,1 24,1 25,1 3,1 4,1 5,1 6,1 7,1 8,1 9,10 10,10 11,10 12,10 13,10 14,10 15,10 16,10 17,10 18,10 19,10 20,10 21,10 22,10 23,10 24,10 25,10 5,10 6,10 7,10 8,10 9
5000
15 -  Relationship and with clauses return synonym
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select v such that Follows*(9, s) and Uses(s, v) with s.stmt# =n and n1 = c.value such that Modifies("ellipse", v) with n1 = n
none
5000
16 -  Relationship and with clauses return attribute
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select cl.stmt# such that Calls(p,_) with cl.procName = p.procName
none
5000
17 -  Relationship and pattern clauses return BOOLEAN
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select BOOLEAN such that Parent(ifs, a) pattern w(v,_) and a(v,_)
TRUE
5000
18 -  Relationship and pattern clauses return tuple
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select <p, v, ifs> such that Modifies(p, v) pattern ifs("x",_,_) such that Uses(p, "x")
One difference 26,One distance 26,One i 26,One k 26,One x 26,One x1 26,One y 26,One y1 26,Two i 26
5000
19 -  Relationship and pattern clauses return synonym
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select v pattern ifs(v,_,_) and while(v,_) such that Uses("ellipse", "length")
none
5000
20 -  Relationship and pattern clauses return attribute
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select ifs.stmt# pattern ifs(v,_,_) and w(v,_) such that Uses("ellipse", v)
none
5000
21 -  With and pattern clauses return BOOLEAN
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select BOOLEAN pattern w("x",_) with w.stmt# = 8
FALSE
5000
22 -  With and pattern clauses return tuple
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select <cl, ifs.stmt#> with cl.procName = p.procName pattern ifs(v,_,_)
25 13,25 2,25 26,25 27,25 30
5000
23 -  With and pattern clauses return synonym
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select w with v.varName = "sin" pattern w(v,_)
none
5000
24 -  With and pattern clauses return attribute
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select v.varName with v1.varName = "sin" pattern ifs(v1,_,_) and ifs(v,_,_)
none
5000
25 -  All types of clauses return BOOLEAN
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select BOOLEAN such that Uses(q, "y") and Uses(q, v) pattern w(v,_) with v.varName = "x" and q.procName = "foo"
FALSE
5000
26 -   All types of clauses return tuple
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select <cl, ifs.stmt#> with cl.procName = p.procName pattern ifs(v,_,_) such that Modifies(p, v)
25 2
5000
27 -   All types of clauses return synonym
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select  p such that Modifies(q, "y") and Uses(q, v) pattern w(v,_) with q.procName = p.procName
One
5000
28 -   All types of clauses return attribute
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select v.varName such that Modifies(q, "y") and Uses(q, v) pattern ifs(v,_,_) with q.procName = cl.procName
none
5000
29 - Syntatic error when return BOOLEAN
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select BOOLEAN with ifs(_,_)
none
5000
30 -  comment
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select w.stmt# 
5, 16
5000
31 -  comment
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select ifs 
2, 13, 26, 27, 30
5000
32 -  comment
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select cl.stmt#
25
5000
33 -  comment
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select pn
14, 15, 21, 22, 23
5000
34 -  comment
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select re
1, 6, 7, 8, 10, 11, 17, 18
5000
35 -  comment
stmt s, s1, s2; assign a, a1; while w, w1; if ifs, ifs1; variable v, v1; procedure p, q, p1; constant c, c1; call cl; print pn; read re; prog_line n, n1;
Select n
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
5000
36 - Mix Case 20
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select w such that Affects(a, s1) and Next*(ifs, a) and Affects(s1, a1)
none
5000
37 - Mix Case 21
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select s1 such that Affects*(a, s1) and Next*(ifs, a) and Affects(s1, a1)
20
5000
38 - Mix Case 22
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select <a, s1, ifs> such that Affects*(a, s1) and Parent*(ifs, a) and Affects(s1, a1)
20 20 13
5000
39 - Mix Case 23
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select <a,a1> such that Affects(a, s1) and Affects*(s1, a1) such that Use(a, v) pattern a1("y",_)
none
5000
40 - Mix Case 24
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v such that Affects*(a, s1) and Uses(p,v) and Modifies(s1, v) with p.procName ="foo" and c.value = 10
none
5000
41 - Mix Case 25
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v.varname such that Affects(a, s1) pattern a(v,_) such that Modifies(s1, v) with p.procName ="foo" and c.value = 10
none
5000
42 - Mix Case 26
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v such that Affects(a, s1) pattern a(v,_) such that Next*(s1, a1) with p.procName =cl.procName and c.value = 10
i,k
5000
43 - Mix Case 27
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v such that Calls(p, q) pattern a(v,_) such that Next*(s1, a1) with p.procName =cl.procName and c.value = 10
none
5000
44 - Mix Case 28
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select  pattern ifs(v,_,_) and a(v1,_) such that Follows*(ifs,a) and Parent(ifs,a1) and Affects*(a,a1) with varName = "y"
none
5000
45 - Mix Case 29
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select w such that AffectsBip(a, s1) and NextBip*(ifs, a) and Affects(s1, a1)
none
5000
46 - Mix Case 30
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select s1 such that AffectsBip*(a, s1) and Next*(ifs, a) and Affects(s1, a1)
20
5000
47 - Mix Case 31
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select <a, s1, ifs> such that Affects*(a, s1) and Parent*(ifs, a) and AffectsBip(s1, a1)
20 20 13,3 24 2,4 24 2
5000
48 - Mix Case 32
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select <a,a1> such that Affects(a, s1) and AffectsBip*(s1, a1) such that Use(a, v) pattern a1("y",_)
none
5000
49 - Mix Case 33
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v such that AffectsBip*(a, s1) and Uses(p,v) and Modifies(s1, v) with p.procName ="foo" and c.value = 10
none
5000
50 - Mix Case 34
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v.varname such that AffectsBip(a, s1) pattern a(v,_) such that Modifies(s1, v) with p.procName ="foo" and c.value = 10
none
5000
51 - Mix Case 35
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v such that AffectsBip(a, s1) pattern a(v,_) such that NextBip*(s1, a1) with p.procName =cl.procName and c.value = 10
i,k
5000
52 - Mix Case 36
stmt s, s1; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p,q; constant c;
Select v such that Calls(p, q) pattern a(v,_) such that NextBip*(s1, a1) with p.procName =cl.procName and c.value = 10
none
5000
53 - Mix Case 37
stmt s; assign a, a1; call cl; variable v, v1; while w; if ifs; print pn; procedure p;
Select  pattern ifs(v,_,_) and a(v1,_) such that Follows*(ifs,a) and Parent(ifs,a1) and AffectsBip*(a,a1) with varName = "y"
none
5000