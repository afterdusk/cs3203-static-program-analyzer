procedure foo {
  read x;
  read y;
  length = x * x + y * y;
  t = 30;
  call bar;
  print length;
}

procedure bar {
  if ((x >= 0) && (y >= 0)) then {
    while (x != 0) {
      tan = y / x;
      sin = y / length;
      cos = x / length;
      call ellipse;
      if (((sin * sin + cos * cos) == 1) || (!(tan != (sin / cos)))) then {
        x = y / 2;
        y = x / 2;
      } else {
        x = 0;
      }
      length = x * x + y * y;
    }
  } else {
    x = 10;
    y = 10;
    length = x * x + y * y;
  }
}

procedure ellipse {
  pi = 3;
  area = pi * x * y;
  if (area < 10) then {
    x = x + 1;
    y = y + y / x + 1;
  } else {
    print area;
  }
}

procedure One {
  read i;
  if (i <= 0) then {
    i = 10;
  } else {
    i = i;
  }
  while (i >= 0) {
    read x;
    read y;
    read distance;
    k = 0;
    read x1;
    read y1;
    difference =
        (x - x1) * (x - x1) + (y - y1) * (y - y1) - distance * distance;
    if (difference > 0) then {
      print x1;
      print y1;
    } else {
      while (difference <= 0) {
        read x1;
        read y1;
        difference =
            (x - x1) * (x - x1) + (y - y1) * (y - y1) - distance * distance;
        k = k + 1;
      }
      print k;
      print x1;
      print y1;
    }
    i = i - 1;
    call Two;
  }
}

procedure Two {
  if (x1 < x) then {
    if (y1 < y) then {
      i = i + 1;
    } else {
      i = i + 1;
    }
  } else {
    if (y1 < y) then {
      i = i + 1;
    } else {
      i = i;
    }
  }
}

procedure proc1 {
  x = 10;
  y = 2 * x + 100;
  call proc2;
  print result;
}

procedure proc2 {
  k = 0;
  z = y;
  while (z >= x) {
    z = z / x;
    k = k + 1;
  }
  print k;
  w = x * (y * z);
  v = ((x - y) * (x + y) + (x + z) * (x - z) + (y - z) * (y - z)) % y;
  if (w > v) then {
    result = w / v;
  } else {
    result = 0;
  }
  result = result % 5 * result / k / k;
}


procedure reallylongone {
    k = 0;
  z = y;
  while (z >= x) {
    z = z / x;
    k = k + 1;
  }
  print k;
  w = x * (y * z);
  v = ((x - y) * (x + y) + (x + z) * (x - z) + (y - z) * (y - z)) % y;
  if (w > v) then {
    result = w / v;
  } else {
    result = 0;
  }
  result = result % 5 * result / k / k;
  k = 0;
  z = y;
  while (z >= x) {
    z = z / x;
    k = k + 1;
  }
  print k;
  w = x * (y * z);
  v = ((x - y) * (x + y) + (x + z) * (x - z) + (y - z) * (y - z)) % y;
  if (w > v) then {
    result = w / v;
  } else {
    result = 0;
  }
  result = result % 5 * result / k / k;
}
